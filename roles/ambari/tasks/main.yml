---

- include: start-all.yml
  tags: startall
  when: startall

- include: quiesce_unquiesce.yml
  when: unquiesce or quiesce or stopall
  tags: stopall, quiesce, unquiesce

- include: stop-all.yml
  when: stopall and inventory_hostname in groups['ambari_agent']
  tags: stopall

- name: include create_user.yml
  include: create_user.yml
  when: CREATE_SERVICE_USERS
  tags: create_users

- name: include configure_kdc.yml
  include: configure_kdc.yml
  when: groups['kdcserver'] is defined
  tags: kdc


- block:
    - set_fact: APORT="{{AMBARI_SERVER_SSL_PORT}}"
    - set_fact: APRTO="https"
    - set_fact: AARGS="--insecure"
    - set_fact: SARGS="ssl"
    - set_fact: SINGL="--singleCRT"
  run_once: true
  delegate_to: localhost
  when: use_ssl

- name: hdfs user limits
  template: src=hdfs.conf.j2 dest=/etc/security/limits.d/hdfs.conf force=yes
  tags: hdfs-limits

- name: data dirs
  include: setup_data_dirs.yml
  tags: data_dirs

- name: include stop-all
  include: stop-all.yml
  when: stop_all_services
  tags: stop-all

- include: setup_java.yml

- include: pre.yml
  when: inventory_hostname in groups['ambari_agent']
  tags: pre


- block:
    - name: generate an ssh key pair on the amabari server
      command: ssh-keygen -q -b 2014 -t rsa -N '' -C 'ambari' -f /root/.ssh/id_rsa
      args:
        creates: /root/.ssh/id_rsa.pub
      when: inventory_hostname in groups['ambari_server']

    - name: get the public key
      fetch: src=/root/.ssh/id_rsa.pub dest=/tmp/id_rsa_ambari.pub flat=yes
      when: inventory_hostname in groups['ambari_server']

    - name: deploy the public key
      authorized_key: user=root key="{{ lookup('file', '/tmp/id_rsa_ambari.pub') }}"
  when: use_ssl

- block:
    - name: create start all
      local_action: template src=start-all.sh.j2 dest="{{start_all_sh}}" mode=755
      tags: start

    - name: create stop all
      local_action: template src=start-all.sh.j2 dest="{{stop_all_sh}}" mode=755 # $0 used in start-all.sh
      tags: stop-all

    - name: create reload all
      local_action: template src=start-all.sh.j2 dest="{{reload_all_sh}}" mode=755
      tags: start
  run_once: true
  delegate_to: localhost

- name: include ambari-server.yml
  include: ambari-server.yml
  when: inventory_hostname in groups['ambari_server']
  tags: server

- name: include ambari-agent.yml
  include: ambari-agent.yml
  when: inventory_hostname in groups['ambari_agent']
  tags: agent

- name: include setup_oozie.yml
  include: setup_oozie.yml
  when: groups['oozie'] is defined
  tags: oozie

- name: include configure-ambari.yml
  include: configure-ambari.yml
  tags: configure

- include: add_datanode.yml
  tags: add_datanode
  when: ADD_DATANODE

- include: add_kafka.yml
  tags: add_kafka
  when: ADD_KAFKA

- include: add_edgenode.yml
  tags: add_edgenode
  when: ADD_EDGENODE

- include: add_nodemanager.yml
  tags: add_nodemanager
  when: ADD_NODEMANAGER

- include: update_rack_info.yml
  tags: update_rack_info
  when: UPDATE_RACK_INFO

- block:
    - debug: msg="Ambari server host {{AMBARI_SERVER }}"
    - debug: msg="Edge node host {{ EDGENODE }}"
  run_once: true
